## Compile with gcc

-D CMAKE_C_COMPILER=/usr/local/Cellar/gcc/6.3.0_1/bin/gcc-6
-D CMAKE_CXX_COMPILER=/usr/local/Cellar/gcc/6.3.0_1/bin/g++-6

## Notes

Have had to use a custom deleter for shared_ptr in Vertex class - so that if a
pointer is deleted, then the Vertex object doensn't get deleted. Note that
objects are then only deleted at end of scope so have to be careful when
defining multiple graphs in same scope. Since command-line app, will only ever
do one at a time so it's fine.

add/remove neighbours_ in Vertex class private so can only add/remove edges.

BipartiteGraph protected variables/methods so freely used by Biclique

Many prinintg methods used for testing, ideally should have used Google Mock,
but too much hassle

note in biclique_find() methods that we pass by non-const references so that
input variables cn be edited. Vital for the recursion in the algorithm to
work.

Used crown graphs as test cases for biclique_find as most maximal bicliques so
explores full recursion tree. Fewest empty and gomplete graphs.

Included google test hard code so future versions don't clash - risk of code
rot though.

Could dowith better command line tests using framework - for instance optional
output file name, but learning framework takes a long time...

import matrix from
http://youngmok.com/c-code-for-reading-unknown-size-matrix-from-text-file/
